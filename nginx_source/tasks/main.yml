# edirtor: haifeng
# 2017/01/12

- name: create user
  user: name={{ item.name }} state=present system={{ item.system }} shell={{ item.shell }}
  with_items:
    - { name: '{{ nginx_user }}', system: no ,shell: '/sbin/nologin'}
- name: install epel-release
  yum: name=epel-release state=latest
- name: install dependeies packet
  yum: name={{ item }} state=latest
  with_items:
    - libxml2-devel
    - libxslt-devel
    - GeoIP-devel
    - pcre-devel
    - gd-devel
    - libevent-devel
    - libevent
    - libevent-headers
    - openssl-devel
    - perl-ExtUtils-Embed
- name: create dir
  file: path={{ item.path }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
  with_items:
    - { path: '{{ install_dir }}', owner: '{{ nginx_user }}', group: '{{ nginx_user }}', mode: '0755', state: directory }
    - { path: '{{ log_dir }}', owner: '{{ nginx_user }}', group: '{{ nginx_user }}', mode: '0755', state: directory }
    - { path: '{{ var_dir }}', owner: '{{ nginx_user }}', group: root, mode: '0755', state: directory }
- name: cp and unarchive nginx_binary_tarball to remote host
  unarchive: src={{ item.src }} dest={{ item.dest }} owner='{{ nginx_user }}' group={{ nginx_user }} creates={{ item.creates }}
  with_items:
    - { src: '{{ nginx_packet }}', dest: '{{ install_dir}}/', creates: '{{ install_dir }}/nginx' }
- name: create link file
  file: src='{{ install_dir }}/nginx/conf' dest=/etc/nginx state=link
- name: copy conf file
  template: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'nginx.conf', dest: '{{ install_dir }}/nginx/conf/', owner: root, group: root, mode: '0644'}
   # - { src: 'nginx.init', dest: '/etc/rc.d/init.d/', owner: root, group: root, mode: '0755' }
    - { src: 'nginx.sh', dest: '/etc/profile.d/', owner: root, group: root, mode: '0644' }
    - { src: 'nginx.logrotate', dest: '/etc/logrotate.d/nginx', owner: root, group: root, mode: '0644' }
    - { src: 'htpasswd', dest: '{{ install_dir }}/nginx/conf/' , owner: 'root', group: 'root', mode: '0644'}
  tags:
   - modify_nginx_conf
  notify:
   - restart nginx service

- include: cent6_service.yml
  when: ansible_os_family == "RedHat" and ansible_lsb.major_release|int == 6

- include: cent7_service.yml
  when: ansible_os_family == "RedHat" and ansible_lsb.major_release|int == 7

- name: set nginx boot and starting up
  service: name={{ item.name }} state={{ item.state }} enabled=yes
  with_items:
    - { name: nginx, state: started }

- include: core_argument.yml

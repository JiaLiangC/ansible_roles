- name: copy mysql password file and sql
  copy: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
  - { src: 'my_client.cnf', dest: /root/.my.cnf, owner: root, group: root, mode: '0600'}
- name: begin replication thread
#  mysql_replication: login_user={{ dbuser }} login_password={{ upassword }} login_unix_socket={{ dbsock }} master_host={{ master_mysql }} master_user={{ sync_user }} master_password={{ sync_passwd }} master_auto_position=1 mode=changemaster
  mysql_replication: login_user={{ dbuser }} login_password={{ upassword }} login_unix_socket={{ dbsock }} master_host={{ master_mysql }} master_user={{ sync_user }} master_password={{ sync_passwd }} master_auto_position=1 mode={{ item }}
  with_items:
  - stopslave
  - changemaster
  - startslave
- name: create monitor user
  mysql_user: login_user={{ dbuser }} login_unix_socket=/var/lib/mysql/mysql.sock login_password={{ upassword }} name=zabbix password={{ zabbix_pass }} host=localhost priv="*.*:REPLICATION CLIENT,PROCESS/mysql.*:SELECT/information\_schema.*:SELECT" state=present
- name: create backup user
  mysql_user: login_user={{ dbuser }} login_unix_socket=/var/lib/mysql/mysql.sock login_password={{ upassword }} name=bakuser password={{ bakuser_pass }} host=localhost priv="*.*:REPLICATION CLIENT,PROCESS,RELOAD,LOCK TABLES" state=present
- name: delete password file
  file: path=/root/.my.cnf state=absent

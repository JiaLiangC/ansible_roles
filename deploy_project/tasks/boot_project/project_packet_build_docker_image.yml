
- name: copy docker_build.sh file
  template:
    src: '{{item}}' 
    #dest: '{{project_install_dir}}/{{item.dest}}'
    dest: '{{project_install_dir}}/{{item | basename}}'
    owner: '{{project_run_user}}'
    group: '{{project_run_group}}'
    mode: "0644"
  loop:
    - '{{project_docker_build_script}}'
    - '{{project_docker_file}}'
    #- src: '{{project_docker_build_script}}' 
    #  dest: '{{project_docker_build_script | basename}}'
    #- src: '{{project_docker_file}}'
    #  dest: '{{project_docker_file | basename}}'
  when: item is not none

- name: update docker image
  local_action: shell /bin/bash {{project_install_dir}}/{{project_docker_build_script|basename}} {{project_prog_name}}
  register: PROJECT_IMAGE
  ignore_errors: true

#- name: debug 1
#  debug:
#    msg: 'project_image: {{PROJECT_IMAGE}}'

- name: get docker image
  local_action: shell /bin/bash {{project_install_dir}}/{{project_docker_build_script|basename}} {{project_prog_name}} get 
  register: PROJECT_IMAGE
  #when: cp_result.changed == false

#- name: debug 2
#  debug:
#    msg: 'project_image: {{PROJECT_IMAGE}}'

- name: set project_image var
  set_fact:
    project_image: '{{PROJECT_IMAGE.stdout}}'

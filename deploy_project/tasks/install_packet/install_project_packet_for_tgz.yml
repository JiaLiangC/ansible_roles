# tar xf jdk-11.0.7_linux-x64_bin.tar.gz -C /tmp/test/  --strip-components 1
# tar --exclude="*/*/*" -tf jdk-11.0.7_linux-x64_bin.tar.gz
# echo 'etc/fstab/ahah' |sed -n 's#\([\^\/]\)\?\(\/.*\)#\1#p'

#- name: get project packet name
#  local_action: shell if [ {{project_deploy_version}} == "0" ];then ls {{project_source_dir}}/{{project_packet_name}}; else ls {{project_archive_dir}}/{{project_packet_name}}_{{project_deploy_version}};fi
#  register: PACKET_NAME
#  ignore_errors: True

- name: get project packet dir name
  local_action: 
    module: shell
    #cmd: tar tvf {{PACKET_NAME.stdout}} |tail -n 1 |awk '{print $NF}' |awk -F'/' '{print $1}'
    cmd: tar tf {{PACKET_NAME.stdout}} |head -n 1 |awk -F'/' '{print $1}'
    args:
      warn: false
  #when: PACKET_NAME is defined and PACKET_NAME is not skipped
  register: packet_dir_name
  run_once: true


- name: cp project packet to remote
  unarchive: 
    src: '{{PACKET_NAME.stdout}}'
    dest: '{{project_install_dir}}' 
    owner: '{{project_run_user}}' 
    group: '{{project_run_group}}' 
    mode: "0755"
    #src: '{{item.src}}' 
    #dest: '{{item.dest}}' 
    #owner: '{{item.owner}}' 
    #group: '{{item.group}}' 
    #mode: '{{item.mode}}'
  #when: PACKET_NAME is defined and PACKET_NAME is not skipped
  #with_items:
  #  - {src: '{{ PACKET_NAME.stdout }}', dest: '{{project_install_dir}}/', owner: '{{project_run_user}}', 
  #     group: '{{project_run_group}}', mode: "0755" }
       #group: '{{project_run_group}}', mode: "0755", creates: '{{project_install_dir}}/{{packet_dir_name.stdout}}' }
  #register: unarchive_result
  register: cp_result

- name: chmod project dir
  shell: 
    cmd: "{{item}}"
  loop:
    - 'find {{project_install_dir}}/{{packet_dir_name.stdout}} -type d -exec chmod 0755 {} \;'
    - 'find {{project_install_dir}}/{{packet_dir_name.stdout}} -type f -exec chmod 0644 {} \;'
  when: 
    - ( project_boot_type == 'nginx' or project_packet_set_mode == true)

#- name: deub
#  debug:
#    msg: "cp_result: {{cp_result}}"

- name: update project packet link file
  file:
    #src: '{{project_install_dir}}/{{packet_dir_name.stdout}}'
    src: '{{ project_packet_link_src_name | default(packet_dir_name.stdout, true)}}'
    dest: '{{project_install_dir}}/{{project_packet_link_name}}'
    #dest: '{{project_packet_link_name}}'
    owner: '{{project_run_user}}'
    group: '{{project_run_group}}'
    state: link
  #file: src={{item.src}} dest={{item.dest}} owner={{item.owner}} group={{item.group}} state={{item.state}}
  #with_items:
  #  - {src: '{{project_install_dir}}/{{packet_dir_name.stdout}}', dest: '{{project_install_dir}}/{{project_packet_link_name}}', 
  #     owner: '{{project_run_user}}', group: '{{project_run_group}}', state: link }
  when: 
    - project_packet_link_name is not none
    - project_packet_link_name != ''
    - project_packet_link_name != project_packet_link_src_name
    #- project_packet_link_name != project_packet_link_src_name | basename 
    # 
    - project_install_dir + '/' + project_packet_link_name != project_packet_link_src_name
    - packet_dir_name.stdout != project_packet_link_name
  #when: project_packet_link_name is none
    #- {src: '{{project_install_dir}}/{{PACKET_NAME.stdout.split("/")[-1]}}', dest: '{{project_install_dir}}/{{project_packet_link_name}}', owner: '{{project_run_user}}', group: '{{project_run_group}}', state: link }


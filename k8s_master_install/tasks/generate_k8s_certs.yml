
- name: generate k8s-root-ca
  local_action: 
    module: ansible.builtin.shell 
    #cmd: 'cfssl gencert -initca {{k8s_cert_json_dir}}/k8s-root-ca-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-root-ca'
    cmd: |
      if [ -e '{{k8s_cert_dir}}/k8s-root-ca-key.pem' ];then
          echo "$PATH"
          echo 'cfssl gencert -initca -ca-key {{k8s_cert_dir}}/k8s-root-ca-key.pem \
              {{k8s_cert_json_dir}}/k8s-root-ca-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-root-ca'
          cfssl gencert -initca -ca-key {{k8s_cert_dir}}/k8s-root-ca-key.pem \
              {{k8s_cert_json_dir}}/k8s-root-ca-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-root-ca
      else
          echo 'cfssl gencert -initca {{k8s_cert_json_dir}}/k8s-root-ca-csr.json | cfssljson \
              --bare {{k8s_cert_dir}}/k8s-root-ca'
          cfssl gencert -initca {{k8s_cert_json_dir}}/k8s-root-ca-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-root-ca
      fi
    args:
      chdir: "{{k8s_work_dir}}"
      #creates: "{{k8s_work_dir}}/{{k8s_cert_dir}}/k8s-root-ca.pem"
      creates: "{{k8s_cert_dir}}/k8s-root-ca.pem"
  run_once: true
  tags:
    - generate_k8s_root_ca
  environment:
    PATH: '{{k8s_cfssl_cmd_path}}:{{ansible_env.PATH}}'  

- name: generate kube-apiserver-ca kubernetes-admin kube-apiserver-kubelet-client
  local_action: 
    module: ansible.builtin.shell 
    #cmd: 'cfssl gencert -ca={{k8s_cert_dir}}/k8s-root-ca.pem -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem -config={{k8s_cert_json_dir}}/k8s-gencert.json -profile=kubernetes {{k8s_cert_json_dir}}/{{item}}-csr.json | cfssljson --bare {{k8s_cert_dir}}/{{item}}'
    cmd: |
      if [ -e '{{ k8s_cert_dir~"/"~item~"-key.pem" }}' ];then
          csr_strings=$(cfssl gencsr -key {{k8s_cert_dir~"/"~item~"-key.pem"}} {{k8s_cert_json_dir}}/{{item}}-csr.json \
              | awk -F':' '{split($2,A,"\"");print A[2]}')

          echo -e ${csr_strings} | grep -v '^$' > {{k8s_cert_dir}}/{{item}}.csr

          cat {{k8s_cert_dir}}/{{item}}.csr | cfssl sign -ca={{k8s_cert_dir}}/k8s-root-ca.pem \
              -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem -config={{k8s_cert_json_dir}}/k8s-gencert.json \
              -profile=kubernetes - | cfssljson -bare {{k8s_cert_dir}}/{{item}}
      else
          cfssl gencert -ca={{k8s_cert_dir}}/k8s-root-ca.pem -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem \
              -config={{k8s_cert_json_dir}}/k8s-gencert.json -profile=kubernetes \
              {{k8s_cert_json_dir}}/{{item}}-csr.json | cfssljson --bare {{k8s_cert_dir}}/{{item}}
      fi
    args:
      chdir: "{{k8s_work_dir}}"
      creates: "{{k8s_cert_dir}}/{{item}}.pem"
  loop:
    - k8s-kube-apiserver
    - k8s-kubernetes-admin
    - k8s-kube-apiserver-kubelet-client
    - k8s-kube-controller-manager
    - k8s-kube-scheduler
    - k8s-kube-proxy
    - k8s-dashboard
    - k8s-kubelet
    #- kubernetes 这个是在整理 k8s-239 时，遇到的一个遗留问题，临时添加的一行，
    # 但是这里就有一个新的问题，如果是用户自已定义了 k8s_cert_conf_files 变量，那么这里写死肯定是不行的。
    # 暂时又不太好改，因为光改这里意义不大，底下还有关于 front 相关的，后面整理整理再改
  run_once: true
  environment:
    PATH: '{{k8s_cfssl_cmd_path}}:{{ansible_env.PATH}}'
  #when: k8s_work_dir~"/"~k8s_cert_json_dir~"/"~item~"-csr.json" is exists

- name: generate k8s-front-proxy-ca
  local_action: 
    module: ansible.builtin.shell 
    cmd: |
      cfssl gencert -initca {{k8s_cert_json_dir}}/k8s-front-proxy-ca-csr.json \
          | cfssljson --bare {{k8s_cert_dir}}/k8s-front-proxy-ca
    args:
      chdir: "{{k8s_work_dir}}"
      creates: "{{k8s_cert_dir}}/k8s-front-proxy-ca.pem"
  run_once: true
  environment:
    PATH: '{{k8s_cfssl_cmd_path}}:{{ansible_env.PATH}}'  

- name: generate k8s-front-proxy-client
  local_action: 
    module: ansible.builtin.shell
    cmd: |
      cfssl gencert -ca={{k8s_cert_dir}}/k8s-front-proxy-ca.pem \
          -ca-key={{k8s_cert_dir}}/k8s-front-proxy-ca-key.pem -config={{k8s_cert_json_dir}}/k8s-gencert.json \
          -profile=kubernetes {{k8s_cert_json_dir}}/{{item}}-csr.json | cfssljson --bare {{k8s_cert_dir}}/{{item}}
    args:
      chdir: "{{k8s_work_dir}}"
      creates: "{{k8s_cert_dir}}/{{item}}.pem"
  loop:
    - k8s-front-proxy-client
  run_once: true
  environment:
    PATH: '{{k8s_cfssl_cmd_path}}:{{ansible_env.PATH}}'  

# serviceAccount private key
- name: generate sa private.key
  local_action: 
    module: ansible.builtin.shell
    cmd: openssl genrsa -out {{k8s_cert_dir}}/k8s-sa.key 2048
    args:
      chdir: "{{k8s_work_dir}}"
      creates: "{{k8s_cert_dir}}/k8s-sa.key"
  run_once: true

- name: generate sa public key
  local_action: 
    module: ansible.builtin.shell 
    cmd: openssl rsa -in {{k8s_cert_dir}}/k8s-sa.key -pubout -out {{k8s_cert_dir}}/k8s-sa.pub 
    args:
      chdir: "{{k8s_work_dir}}"
      creates: "{{k8s_cert_dir}}/k8s-sa.pub"
  run_once: true


#- name: generate kube-apiserver-ca
#  local_action: shell /usr/bin/cfssl gencert -ca={{k8s_cert_dir}}/k8s-root-ca.pem -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem -config=k8s-gencert.json -profile=kubernetes k8s-kube-apiserver-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-kube-apiserver
#  args:
#    chdir: "{{k8s_work_dir}}"
#    creates: "{{k8s_work_dir}}/{{k8s_cert_dir}}/k8s-kube-apiserver.pem"
#  
#- name: generate k8s-kubernetes-admin
#  local_action: shell /usr/bin/cfssl gencert -ca={{k8s_cert_dir}}/k8s-root-ca.pem -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem -config=k8s-gencert.json -profile=kubernetes k8s-kubernetes-admin-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-kubernetes-admin
#  args:
#    chdir: "{{k8s_work_dir}}"
#    creates: "{{k8s_work_dir}}/{{k8s_cert_dir}}/k8s-kubernetes-admin.pem"
#
#- name: generate k8s-kube-apiserver-kubelet-client
#  local_action: shell /usr/bin/cfssl gencert -ca={{k8s_cert_dir}}/k8s-root-ca.pem -ca-key={{k8s_cert_dir}}/k8s-root-ca-key.pem -config=k8s-gencert.json -profile=kubernetes k8s-kube-apiserver-kubelet-client-csr.json | cfssljson --bare {{k8s_cert_dir}}/k8s-kube-apiserver-kubelet-client
#  args:
#    chdir: "{{k8s_work_dir}}"
#    creates: "{{k8s_work_dir}}/{{k8s_cert_dir}}/k8s-kube-apiserver-kubelet-client.pem"

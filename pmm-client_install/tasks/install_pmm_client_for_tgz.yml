
- name: get pmm_client packet dir name
  local_action: shell tar tvf {{pmm_client_packet}} |tail -n 1 |awk '{print $NF}' |awk -F'/' '{print $1}'
  register: packet_dir_name
  run_once: true


- name: cp pmm_client packet to remote
  unarchive: src={{item.src}} dest={{item.dest}} owner={{item.owner}} group={{item.group}} mode={{item.mode}}
  when: pmm_client_packet is not none
  with_items:
    - src: '{{ pmm_client_packet }}'
      dest: '{{app_base_dir}}/'
      owner: '{{pmm_client_run_user}}' 
      group: '{{pmm_client_run_group}}'
      mode: "0755" 
  register: cp_result

- name: update pmm_client packet link file for tgz
  file: src={{item.src}} dest={{item.dest}} owner={{item.owner}} group={{item.group}} state={{item.state}}
  with_items:
    - src: '{{app_base_dir}}/{{packet_dir_name.stdout}}'
      dest: '{{pmm_client_base_dir}}'
      owner: '{{pmm_client_run_user}}'
      group: '{{pmm_client_run_group}}'
      state: link 
  when: pmm_client_base_dir is not none and packet_dir_name.stdout != 'pmm-client'

- name: get pmm_client old version
  shell: '/usr/sbin/pmm-admin --version'
  register: pmm_client_old_ver
  ignore_errors: true

- name: install pmm-client
  shell: '{{pmm_client_base_dir}}/install'
  args:
    chdir: '{{pmm_client_base_dir}}'
    creates: /usr/local/percona/pmm-client/textfile_collector/example.prom
  #when: pmm_client_old_var.stdout is not none 

# update
- name: get pmm_client current version
  shell: '{{pmm_client_base_dir}}/bin/pmm-admin --version'
  register: pmm_client_current_ver
  ignore_errors: true


- name: update pmm-client
  shell: 'pmm-admin stop --all && {{pmm_client_base_dir}}/install'
  args:
    chdir: '{{pmm_client_base_dir}}'
  when: pmm_client_current_ver.stdout != pmm_client_old_ver.stdout

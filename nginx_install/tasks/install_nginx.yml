# edirtor: haifeng
# 2017/01/12

- name: create nginx user
  user: name={{ item.name }} state=present system={{ item.system }}
  with_items:
    - { name: '{{ nginx_run_user }}', system: no ,shell: '/sbin/nologin'}

- name: link /data1 to /data dir
  file: src={{ item.src }} dest={{item.dest}} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
  with_items:
    - { src: /data1, dest: /data, owner: root, group: root, mode: "0777", state: link}
  tags:
    - create_data_soft_link

- name: create nginx dir
  file: path={{ item.path }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
  with_items:
    - { path: "{{app_base_dir}}", owner: root, group: root, mode: "0755", state: directory }
    - { path: "{{nginx_conf_dir}}", owner: root, group: root, mode: "0755", state: directory }
    - { path: "{{nginx_log_dir}}", owner: '{{ nginx_run_user }}', group: '{{ nginx_run_user }}', mode: "0755", state: directory }
    - { path: "{{nginx_var_dir}}", owner: '{{ nginx_run_user }}', group: root, mode: "0755", state: directory }
   # - { path: "{{nginx_data_dir}}", owner: '{{ nginx_data_user }}', group: root, mode: "0755", state: directory }


- name: get nginx packet dir name
  local_action: shell tar tvf {{nginx_packet}} |tail -n 1 |awk '{print $NF}' |awk -F'/' '{print $1}'
  register: nginx_dir_name
  run_once: true

- name: cp and unarchive nginx to remote host
  unarchive: src={{ item.src }} dest={{ item.dest }} owner='{{ nginx_run_user }}' group={{ nginx_run_user }} creates={{ item.creates }}
  with_items:
    - { src: '{{nginx_packet}}', dest: '{{ app_base_dir}}/', creates: '{{ app_base_dir }}/{{nginx_dir_name.stdout}}', mode: "0755" }

- name: create nginx link dir
  file: src={{ item.src }} dest={{item.dest}} state={{ item.state }}
  with_items:
    - { src: "{{app_base_dir}}/{{nginx_dir_name.stdout}}", dest: "{{nginx_base_dir}}", state: link}
  when: nginx_dir_name.stdout != "nginx"

- name: create nginx link dir
  file: src={{ item.src }} dest={{item.dest}} state={{ item.state }}
  with_items:
    - { src: "{{nginx_conf_dir}}", dest: /etc/nginx, state: link}
    - { src: "{{nginx_base_dir}}", dest: /opt/nginx, state: link}
  when: item.dest is not exists


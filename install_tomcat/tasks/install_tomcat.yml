- name: cp and unarchive tomcat-{{version}} to remote host
  #unarchive: src={{ pack_dir }}/apache-tomcat-7.0.70.tar.gz dest=/opt/ owner=tomcat group=tomcat creates={{ install_dir }}/
  unarchive: src={{ tomcat_pack }} dest={{ install_dir}}/ owner=tomcat group=tomcat creates={{ install_dir }}/{{ tomcat_pack.split('/')[-1][0:-7] }}
#- name: modify dir name
#  shell: "{{ item }}"
#  with_items:
#    - test -e /usr/local/gvis || mv /opt/apache-tomcat-7.0.70 /usr/local/gvis
#    - chown www.www /usr/local/gvis
- name: delete default webapps
  file: path={{ item }} state=absent
  with_items:
    - "{{ tomcat_dir }}/webapps/ROOT"
#    - "{{ webapp_dir }}/manager"
    - "{{ tomcat_dir }}/webapps/host-manager"
    - "{{ tomcat_dir }}/webapps/examples"
    - "{{ tomcat_dir }}/webapps/docs"
- name: add manager authority
  #lineinfile: dest={{tomcat_dir}}/conf/tomcat-users.xml regexp="{{ item.regexp }}" line="{{ item.line }}" insertbefore="{{ item.insertbefore }}" backrefs=no
  lineinfile: dest={{item.dest}} regexp={{ item.regexp }} line={{ item.line }} insertbefore={{ item.insertbefore }} backrefs=no
  with_items:
    - { dest: "{{tomcat_dir}}/bin/catalina.sh", regexp: "JAVA_OPTS='-server.*", line: "JAVA_OPTS='-server -Xms2048m -Xmx2048m -Xmn1g -Xss1024K -XX:+UseParallelGC -XX:ParallelGCThreads=30 -XX:TargetSurvivorRatio=85 -verbose:gc -Xloggc:/tmp/tomcat_gc.log -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:ErrorFile=/tmp/tomcat_err.log'", insertbefore: "cygwin=false"}
#    - { dest: "{{tomcat_dir}}/bin/catalina.sh", regexp: "JAVA_OPTS=''", line: "JAVA_OPTS=''", insertbefore: "cygwin=false"}
    - { dest: "{{tomcat_dir}}/conf/tomcat-users.xml", regexp: '<user username="ttstatus" password="t1o2m3" roles="manager-gui,manager-script,manager-jmx,manager-status"/>', line: '<user username="ttstatus" password="t1o2m3" roles="manager-gui,manager-script,manager-jmx,manager-status"/>', insertbefore: "</tomcat-users>"}
- name: create Catalina dir
  file: path={{ item.path }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
  with_items:
    - { path: '{{ tomcat_dir}}/conf/Catalina/localhost', owner: tomcat, group: tomcat, mode: '0755', state: directory }   

- name: copy context conf file
  template: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }}
  with_items:
    - { src: 'tstatus.xml', dest: "{{tomcat_dir}}/conf/Catalina/localhost/", owner: tomcat, group: tomcat}

- name: start tomcat
  shell: ps aux |grep -v "grep" | grep 'tomcat' | grep 'java' || su - tomcat -c '{{tomcat_dir}}/bin/catalina.sh start'

#- name: create webapps dir ROOT
#  file: path={{ item.path }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
#  with_items:
#    - { path: '{{ webapp_dir}}/ROOT', owner: www, group: www, mode: '0755', state: directory }   
#    - { path: '/data4/gvis', owner: www, group: www, mode: '0755', state: directory }
#- name: deploy archbase
#  unarchive: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} creates={{ item.creates }}
#  with_items:
#    - { src: '{{ local_dir }}/war/archbase.war', dest: '{{ webapp_dir }}/ROOT/', owner: www, group: www, creates: '{{ webapp_dir }}/ROOT/WEB-INF'}
#- name: copy gvis conf file
#  copy: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }}
#  with_items:
#    - { src: 'gvis.xml', dest: /usr/local/gvis/conf/server.xml, owner: www, group: www}
#    - { src: 'application.properties', dest: "{{ webapp_dir}}/ROOT/WEB-INF/classes/", owner: www, group: www}
#    - { src: 'db.properties', dest: "{{ webapp_dir}}/ROOT/WEB-INF/classes/", owner: www, group: www}
#    - { src: 'gvis.logrotate', dest: "/etc/logrotate.d/gvis", owner: root, group: root}
#- name: start gvis tomcat
#  shell: ps aux | grep 'gvis' | grep 'java' || su - www -c '/usr/local/gvis/bin/catalina.sh start'

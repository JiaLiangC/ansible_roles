# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user {{nginx_user}};
#worker_processes auto;
worker_processes 8;
worker_cpu_affinity 1000000000000000000000000000000000000000 0100000000000000000000000000000000000000
0010000000000000000000000000000000000000 0001000000000000000000000000000000000000
0000100000000000000000000000000000000000 0000010000000000000000000000000000000000
0000001000000000000000000000000000000000 0000000100000000000000000000000000000000;

#worker_cpu_affinity 10000000000000000000000 01000000000000000000000
#00100000000000000000000 00010000000000000000000
#00001000000000000000000 00000100000000000000000
#00000010000000000000000 00000001000000000000000;

error_log {{nginx_log_dir}}/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    use epoll;
    worker_connections  65530;
    accept_mutex on;
    multi_accept on;
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  download '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';


    log_format  logstash_json '{"@timestamp": "$time_iso8601",'
                              '"remote_addr": "$remote_addr",'
                              '"remote_user": "$remote_user",'
                              '"request": "$request",'
                              '"status": "$status",'
                              '"body_bytes_sent": $body_bytes_sent,'
                              '"http_referer": "$http_referer",'
                              '"http_user_agent": "$http_user_agent",'
                              '"http_x_forwarded_for": "$http_x_forwarded_for",'
                              '"request_time": $request_time,'
                              '"upstream_response_time": $upstream_response_time,'
                              '"upstream_addr": "$upstream_addr",'
                              '"upstream_cache_status": "$upstream_cache_status",'
                              '"upstream_status": "$upstream_status"}';

    access_log  {{nginx_log_dir}}/access.log  main;

    server_tokens off;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    
    client_max_body_size      20m;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 128k;
    client_header_timeout     10;
    client_body_timeout       10;
    send_timeout              10;
    
    gzip  on;
    gzip_min_length  1k;
    gzip_buffers  4 16k;
    gzip_http_version 1.1;
    gzip_comp_level   2;
    gzip_types  text/plain application/x-javascript text/css application/xml;
    gzip_vary  on;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        #listen       [::]:80 default_server;
        server_name  _;
        #root         /usr/share/nginx/html;
        root         {{webapp_dir}};

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        location /NginxStatus {
             stub_status     on;
             access_log      /var/log/nginx/NignxStatus.log;
             auth_basic      "NginxStatus";
             auth_basic_user_file    htpasswd;
             allow 127.0.0.1;
             deny all;
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }
}

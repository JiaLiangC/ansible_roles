- name: create ansible_etcd_certs dir
  #local_action: file path="{{etcd_work_dir}}/ansible_etcd_certs" state=directory
  local_action: file path="{{etcd_work_dir}}/{{etcd_cert_dir}}" state=directory
  run_once: true

- name: generate etcd-root-ca
  local_action: shell /usr/bin/cfssl gencert -initca ca-csr.json | cfssljson --bare {{etcd_cert_dir}}/etcd-root-ca
  #shell: /usr/bin/cfssl gencert -initca ca-csr.json | cfssljson --bare {{etcd_cert_dir}}/etcd-root-ca
  args:
    chdir: "{{etcd_work_dir}}"
    creates: "{{etcd_work_dir}}/{{etcd_cert_dir}}/etcd-root-ca.pem"
  run_once: true
  #delegate_to: localhost

- name: generate etcd-server-ca
  local_action: shell /usr/bin/cfssl gencert -ca={{etcd_cert_dir}}/etcd-root-ca.pem -ca-key={{etcd_cert_dir}}/etcd-root-ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson --bare {{etcd_cert_dir}}/etcd-server-ca
  args:
    chdir: "{{etcd_work_dir}}"
    creates: "{{etcd_work_dir}}/{{etcd_cert_dir}}/etcd-server-ca.pem"
  run_once: true
  #delegate_to: localhost
  
- name: generate etcd-member-ca
  local_action: shell /usr/bin/cfssl gencert -ca={{etcd_cert_dir}}/etcd-root-ca.pem -ca-key={{etcd_cert_dir}}/etcd-root-ca-key.pem -config=ca-config.json -profile=peer member.json | cfssljson --bare {{etcd_cert_dir}}/etcd-member-ca
  args:
    chdir: "{{etcd_work_dir}}"
    creates: "{{etcd_work_dir}}/{{etcd_cert_dir}}/etcd-member-ca.pem"
  run_once: true
  #delegate_to: localhost

- name: generate etcd-client-ca
  local_action: shell /usr/bin/cfssl gencert -ca={{etcd_cert_dir}}/etcd-root-ca.pem -ca-key={{etcd_cert_dir}}/etcd-root-ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson --bare {{etcd_cert_dir}}/etcd-client-ca
  args:
    chdir: "{{etcd_work_dir}}"
    creates: "{{etcd_work_dir}}/{{etcd_cert_dir}}/etcd-client-ca.pem"
  run_once: true
